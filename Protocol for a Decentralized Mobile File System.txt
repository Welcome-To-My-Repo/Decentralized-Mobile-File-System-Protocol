Protocol for a Decentralized Mobile File System

Version 0.3

(C)opyright May 2020 Daniel (Robin) Smith <smithtrombone@gmail.com>

________________________________________________________________________________

This document is the official description of the Decentralized Movile File
System (DMFS) Protocol.
Distribution of this document is unlimited on the condition that any copy
produced is identical to the original.



CONTENTS _______________________________________________________________________

1. Introduction:
	Explanations of the purpose of this document.

2. Overview:
	General summary of the components of a DFMS.

3. Networking:
	Describes how information is transferred within the network.

4. Storage:
	Describes how information is managed within the network.

5. Resource Management:
	Describes how the network structure is managed.



1 INTRODUCTION _________________________________________________________________

The objective of the DMFS protocol is to exist as an alternative method of cloud
storage. It will specifically make improvements regarding resource and security
limitations that commmonly occur in centralized cloud storage.

The central mechanism of a DMFS is that any data shared between devices on the
network will only have readability and meaning to the devie it originated from.
This allows information in the DMFS to be obfuscated from attackers while
retaining its readability to users.



2 OVERVIEW _____________________________________________________________________

This section will cover information and concepts that unversally pertain to the
DMFS Protocol.



	2.1 TERMINOLOGY ________________________________________________________

	This section lists terms that are specific to a DMFS. The list only
	includes basic definitions with more details included in the sections
	below.

		DMFS:
		The acronym for Decentralized Mobile File System.

		Block:
		The requisite format for any data stored in a DMFS network.

		Remote Device:
		Any computing device connected to a DFMS.

		Routing Device:
		A Remote Device with an additional role in the DMFS network. A
		Routing Device facilitates connections between Remote Devices in
		the DMFS network.

		Signal:
		A whole numerical value passed between Remote Devices that is
		used to represent specific communications.

		Signal Type:
		An organizational group that a Message ID can belong to.



	2.2 THE BLOCK __________________________________________________________

	This section defines the DMFS Block file format.

	Any data that is to be stored in the DMFS is passed between devices in
	the format of a Block. A Block contains a piece of a header that
	carries information about the block, a data section that contains a
	portion of the original file the Block was derived from, and one or more
	layers of encryption surrounding a section or the entirety of the Block.

	Any Block that is n ot formed properly according to the parameters in
	this section will not be accepted by the DMFS.



		2.2.1 THE BLOCK HEADER _________________________________________

		The Header section is a 432 byte section. This section will
		always appear before any other section in the BLock file. The
		Header contains the following information in this order:

		1. A 64 bit ID number for the file that the Data section
		originated from.

		2. A 32 bit ID number for the block.

		3. A 64 bit ID number for the User the Block belongs to.

		4. A 16 bit number representing the size of the Data section. If
		the number is zero, the Data section is assumed to be 8
		Kilobytes long.

		5. The Header is required to be exactly 46 bytes long.



		2.2.2 THE DATA SECTION _________________________________________

		The file section contains a section of the original file that
		can have a maximum size of 8 Kilobytes. The Data section can
		contain a part of the original file that is smaller than 8
		Kilobytes, but the size must be recorded in the Header.



		2.2.3 ENCRYPTION _______________________________________________

		A layer of encryption can be placed over any section of the
		Block or the entire file itself can be encrypted.

		The Remote Device that applies the encryption to the Block is
		responsible for storing the keys to the encryption and for
		reversing it.

		2.2.4 BLOCK FILE NAMING CONVENTIONS ____________________________

		Because the header may be encrypted, other devices determine the
		origin of the Block file from its name.

		The name of the Block file shall be the decimal representation
		of section 3 of the Header section, followed by " - ", followed
		by section 1 of the Header section.



3 NETWORKING ___________________________________________________________________

All communications between devices in a DMFS are performed using a TCP
connection. The act of communication happens through the use of Signals.
These are whole numerical values sent from one Remote Device to another through
the TCP connection. They're used to represent specific messages that would be
sent through the network.

All Signals are sent in ASCII form to avoid endianness confusion.

A Message ID can represent the state of a Remote Device, a request for data, or
an error. A Message ID cannot be used to pass data that's stored in the DMFS.
Message IDs are grouped into the following types:

	DEVICE STATE

		100 - Message Received
			Returned if the previous signal has been successfully
			processed.
			This signal must be returned to the sending Remote
			Device upon successfully receiving any Signal.
			After this signal has been received both devices can
			safely proceed with the protocol corresponding to the
			initial signal sent by the sending Remote Device.

		101 - device declares itself a Routing Device
			Sent in response to Signal 202 if device is a routing
			device.

		102 - device declares itself a Remote Device
			Sent in response to Signal 202 if device is a Remote
			Device.


		103 - resources available
			this message is sent to tell the receiving Remote Device
			that the sending Device has resources available for the
			receiving Device to use.
			This signal is used to respond to 202. After this signal
			is sent, the Remote Device should expect to receive a
			single Block file for storage.

		... EMPTY
			The following values from 104 to 199 have no signal
			assigned.

	REQUEST

		200 - request for Block
			This signal is sent followed by the ID number of the
			block. Only one ID number can follow this Signal as it
			represents a request for only one block.

		201 - request for type of device
			This signal corresponds to 101 and 102. It is sent
			to determine if the receiving device is a Routing or
			Remote Device.

		202 - request storage
			This signal is sent to let the receiving Remote Device
			know that the sending Remote Device wants to store a
			block. This signal communicates the intent to store only
			a single Block. If the sending Remote Device receives a
			103, it is allowed to send a single Block to the
			receiving Remote Device.

	ROUTING

		300 - request IP address
			Sent to the Routing Device. The Routing Device should
			return a single IP address of a Remote Device in the
			DMFS.
			The address sent is decided by the Routing Device based
			on factors such as the amount and availability of
			resources on each Remote Device in the network.

		402 - request authentication
			Sent by the Routing Device to a Remote Device in order
			to allow a certain action.

		403 - request to join DMFS
			sent to the Routing Device by a Remote Device that wants
			to join the DMFS.

5 RESOURCE MANAGEMENT __________________________________________________________

	5.9 FILESYSTEM LIMITATIONS _____________________________________________

	Due to the Block header and naming conventions, a DMFS may contain only
	2^64 unique files for each of the 2^64 possible users.
